{"version":3,"sources":["square.svg","employmentBlock.js","educationBlock.js","skillBlock.js","App.js","profileDescription.js","serviceWorker.js","index.js"],"names":["module","exports","employmentBlock","period","position","company","descriptionList","listObj","length","className","map","item","key","educationBlock","titleName","location","skillBlock","skillName","skillNumber","App","src","square","paragraphs","profileDescription","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"gGAAAA,EAAOC,QAAU,IAA0B,oC,sJCEpC,SAASC,EAAgBC,EAAQC,EAAUC,EAASC,GACvD,IAAIC,EAAU,GAMd,OAJID,EAAgBE,OAAS,IACzBD,EAAUD,GAGP,yBAAKG,UAAU,oBAClB,yBAAKA,UAAU,mBACX,4BAAKN,IAET,yBAAKM,UAAU,mBACX,4BAAKL,EAAL,IAAe,0BAAMK,UAAU,aAAhB,MAAgCJ,IAC/C,wBAAII,UAAU,yBACTF,EAAQG,KAAI,SAAAC,GAAI,OAAI,wBAAIC,IAAKD,GAAOA,SCd9C,SAASE,EAAeV,EAAQW,EAAWC,GAC9C,OAAO,yBAAKN,UAAU,mBAClB,yBAAKA,UAAU,kBACX,4BAAKN,IAET,yBAAKM,UAAU,kBACX,4BAAKK,IAET,6BACI,wBAAIL,UAAU,yBAAyBM,KCT5C,SAASC,EAAWC,EAAWC,GAClC,OAAO,yBAAKT,UAAU,iBAClB,wBAAIA,UAAU,QACTQ,GAEL,yBAAKR,UAAU,eACX,yBAAKA,UAAS,sBAAiBS,O,0BC+E5BC,MA9Ef,WACE,OACE,yBAAKV,UAAU,YACb,4BAAQA,UAAU,cAChB,yBAAKA,UAAU,mBACb,sDAGA,qEAIF,yBAAKA,UAAU,yBACb,yBAAKW,IAAKC,IAAQZ,UAAU,kBAGhC,yBAAKA,UAAU,0BASb,yBAAKA,UAAU,uBACb,6BAAK,qCACL,qDAGJ,yBAAKA,UAAU,0BACb,6BAASA,UAAU,6BACjB,4BAAI,0BAAMA,UAAU,iBAAhB,YCvCP,SAA4Ba,GAC/B,IAAIf,EAAU,GAMd,OAJIe,EAAWd,OAAS,IACpBD,EAAUe,GAGP,yBAAKb,UAAU,uBACjBF,EAAQG,KAAI,SAAAC,GAAI,OAAI,2BAAIA,ODgCtBY,CAAmB,CAAC,sNAAD,4TAEtB,6BAASd,UAAU,gCACjB,4BAAI,0BAAMA,UAAU,iBAAhB,uBACHP,EAAgB,qBAAsB,0CAA2C,mBAAoB,CAAC,yJAErG,mFACA,6DACA,sFACA,0CACA,+FACDA,EAAgB,sBAAuB,sCAAuC,cAAe,CAC5F,kDACA,qEACA,oDACA,qDACA,mEAEDA,EAAgB,sBAAuB,gCAAxB,+EAAyI,CACvJ,+CACA,8BACA,oCAGJ,6BAASO,UAAU,+BACjB,4BAAI,0BAAMA,UAAU,iBAAhB,cACHI,EAAe,sBAAuB,iFAA0E,8BAChHA,EAAe,sBAAuB,mEAAiE,8BACvGA,EAAe,sBAAuB,4DAA6D,4BAEtG,6BAASJ,UAAU,4BACjB,4BAAI,0BAAMA,UAAU,iBAAhB,WACJ,yBAAKA,UAAU,yBACZO,EAAW,cAAe,OAC1BA,EAAW,wBAAyB,OACpCA,EAAW,0BAA2B,OACtCA,EAAW,sBAAuB,YElE3BQ,QACW,cAA7BC,OAAOV,SAASW,UAEe,UAA7BD,OAAOV,SAASW,UAEhBD,OAAOV,SAASW,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.4433de6a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/square.9088db8c.svg\";","import React from \"react\";\r\n\r\nexport function employmentBlock(period, position, company, descriptionList) {\r\n    let listObj = [];\r\n\r\n    if (descriptionList.length > 0) {\r\n        listObj = descriptionList;\r\n    }\r\n\r\n    return <div className=\"employment-block\">\r\n        <div className=\"employment-time\">\r\n            <h5>{period}</h5>\r\n        </div>\r\n        <div className=\"employment-text\">\r\n            <h4>{position} <span className=\"weak-text\">at {company}</span></h4>\r\n            <ul className=\"bullet-list--noIndent\">\r\n                {listObj.map(item => <li key={item}>{item}</li>)}\r\n            </ul>\r\n        </div>\r\n    </div>;\r\n}\r\n","import React from \"react\";\r\n\r\nexport function educationBlock(period, titleName, location) {\r\n    return <div className=\"education-block\">\r\n        <div className=\"education-time\">\r\n            <h5>{period}</h5>\r\n        </div>\r\n        <div className=\"education-text\">\r\n            <h5>{titleName}</h5>\r\n        </div>\r\n        <div>\r\n            <h5 className=\"text-right  weak-text\">{location}</h5>\r\n        </div>\r\n    </div>;\r\n}\r\n","import React from \"react\";\r\n\r\nexport function skillBlock(skillName, skillNumber) {\r\n    return <div className=\"skill-wrapper\">\r\n        <h6 className=\"mb-1\">\r\n            {skillName}\r\n        </h6>\r\n        <div className=\"skill-outer\">\r\n            <div className={`skill-inner ${skillNumber}`}></div>\r\n        </div>\r\n    </div>;\r\n}\r\n","import { profileDescription } from './profileDescription';\nimport { employmentBlock } from './employmentBlock';\nimport { educationBlock } from './educationBlock';\nimport { skillBlock } from './skillBlock';\nimport React from 'react';\n// import logo from './logo.svg';\nimport square from './square.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"app-body\">\n      <header className=\"app-header\">\n        <div className=\"title-container\">\n          <h1>\n            Guilherme Barbosa Leme\n          </h1>\n          <h5>\n            Front-end Engineer, Product Designer\n          </h5>\n        </div>\n        <div className=\"header-logo-container\">\n          <img src={square} className=\"header-logo\"></img>\n        </div>\n      </header>\n      <div className=\"contact-info-container\">\n        {/* <div className=\"contact-info--block\">\n          <div><b>Address</b></div>\n          <div>887 Eça de Queirós Street, 85905-080, Cascavel, Paraná - Brazil</div>\n        </div>\n        <div className=\"contact-info--block\">\n          <div><b>Telefone</b></div>\n          <div>+55 45 99931-2339</div>\n        </div> */}\n        <div className=\"contact-info--block\">\n          <div><b>Email</b></div>\n          <div>guibleme@gmail.com</div>\n        </div>\n      </div>\n      <div className=\"resume-parts-container\">\n        <section className=\"profile-section-container\">\n          <h3><span className=\"section-title\">SUMMARY</span></h3>\n          {profileDescription([`Energetic front-end engineer and product designer, with 2+ years of full-time experience, from general web apps to ERP softwares. Implemented a design system and design specification workflow at Maxicon Systems.`, `Has been working as a Product designer and system analyst for the last eight months, providing scope definition and requirement specification, with necessary documentation (flowcharts, UML charts), as well as protoyping new products.`, `Freelance as interface designer and user experience consultant since 2018.`])}\n        </section>\n        <section className=\"employment-section-container\">\n          <h3><span className=\"section-title\">EMPLOYMENT HISTORY</span></h3>\n          {employmentBlock('Feb 2019 - present', 'Product designer and software developer', ' Maxicon Systems', [\n            `Product design (problem benchmarking/brainstorming, solution refinement using design thinking, prototype development and product adherence validation)`,\n            'Software analysis and specification (project documents, flow charts, UML Charts)',\n            'User interface design (Adobe XD, Figma, Affinity Designer)',\n            'User experience analysis (A/B tests, supervised and unsupervised usability surveys)',\n            'Prototype development (Adobe XD, Figma)',\n            'Front-end engineering (Angular 6 + Node and Java backend + Mongo, PostgreSQL and OracleDB)'])}\n          {employmentBlock('Sep 2016 - Jan 2018', 'UI Designer and front-end developer', 'Wing Agency', [\n            'User interface design (Adobe Photoshop, Sketch)',\n            'User experience analysis (A/B tests, supervised usability surveys)',\n            'Prototype development (inDesign, Adobe Photoshop)',\n            'User interface development (Angular.Js, Angular 2)',\n            'Requirement specification and sprint management (Trello, Jira)'\n          ])}\n          {employmentBlock('Jul 2014 - Dec 2014', 'Data visualization Internship', `NICTA's (National Information Technology Australia) Inteligent Pipes Project`, [\n            '2D data visualization, using Google Maps API',\n            'Matlab software development',\n            'Data processing and conversion',\n          ])}\n        </section>\n        <section className=\"education-section-container\">\n          <h3><span className=\"section-title\">EDUCATION</span></h3>\n          {educationBlock('Aug 2010 - Dec 2019', 'BSc. Electronic Engineering, Federal University of Technology – Paraná', 'Toledo, Paraná - Brazil')}\n          {educationBlock('Jan 2017 - Dec 2019', 'BTech. System Analysis and Developement, University of Paraná', 'Toledo, Paraná - Brazil')}\n          {educationBlock('Aug 2013 - Dec 2014', 'Electrical and Computer Engineering, University of Sydney', 'Sydney, NSW - Australia')}\n        </section>\n        <section className=\"skills-section-container\">\n          <h3><span className=\"section-title\">SKILLS</span></h3>\n          <div className=\"skills-grid-container\">\n            {skillBlock('Prototyping', 'w90')}\n            {skillBlock('Front-end development', 'w80')}\n            {skillBlock('Product design/analysis', 'w70')}\n            {skillBlock('Project documenting', 'w60')}\n          </div>\n        </section>\n      </div>\n    </div>\n  );\n\n}\n\nexport default App;\n","import React from \"react\";\r\n\r\nexport function profileDescription(paragraphs) {\r\n    let listObj = [];\r\n\r\n    if (paragraphs.length > 0) {\r\n        listObj = paragraphs;\r\n    }\r\n\r\n    return <div className=\"profile-description\">\r\n        {listObj.map(item => <p>{item}</p>)}\r\n    </div>;\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}